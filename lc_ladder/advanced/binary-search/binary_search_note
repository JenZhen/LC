- Binary Search template

template1: for most of cases
l, r = start, end # 找到可行解范围
while l + 1 < end:
    mid = l + (r - l) // 2 # 二分区间 avoid overflow
    if checkCondition(): # 检查条件，推测答案应该在哪一侧
        l = mid # 调整区间
    else:
        r = mid # 调整区间
# 出while 循环之后 l, r 还没有检查
check(l)
check(r)

template2: for cases the end of l, r are hard/expansive to evaluated individually.
l, r = start, end # 找到可行解范围
while l <= r:
    mid = (l + r) // 2
    if checkCondition(): # 检查条件，推测答案应该在哪一侧
        l = mid + 1 # 调整区间
    else:
        r = mid - 1 # 调整区间
# 最后一次循环l == r,
# 退出循环之后 l,r 位置是 r, l（l在r右边)
# 最后l 的位置是目标应该在的位置， 不管目标有没有找到

- 思路：
1. 找到可行解的范围
2. 猜答案 （二分）
3. 检验条件，来判断答案应该在哪一侧
4. 调整搜索范围

- 二分法的理解和应用
1. 一维二分 （例： rotate array 找某个数）
2. 二维二分 （例： sorted matrix 找peak, min rectangle enclosing black pixels)
3. 根据值域二分 （例：sqrt(x))

值域二分题目特征:
找“最”大/小/后/前 以满足xxx条件


- Sweeping line
核心思路：把区间的点当做时间 (例如：（x_posiiton， start), (y_position, end))
然后根据事件发生的顺序来排序，要慎重考虑secondary index, 在同一时间根据事件 start/end 来排序
    - 会议室安排
    - 几个飞机在天上
    - 天际线

- Deque 双端队列
deque特点： 可以从两头push, pop
适用于固定长度的sliding window，的popleft append（right)的操作
用于维护一个单调的序列，类似于单调栈
    - Sliding winding maximum


四种类型的总结
http://www.cnblogs.com/grandyang/p/6854825.html
